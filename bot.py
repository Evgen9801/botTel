# -*- coding: utf-8 -*-

import logging
import aiohttp
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
from dotenv import load_dotenv
import re

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ö–ª—é—á Yandex API
YANDEX_API_KEY = "your_api_key_here"  # –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API-–∫–ª—é—á

# URL Yandex API
YANDEX_API_URL = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
HEADERS = {
    "Content-Type": "application/json",
    "Authorization": "Api-Key AQVN2S2-LNaAPFiOaj6hXOgkNacGnbJGYls0My6L",  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π API-–∫–ª—é—á
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏
MODEL_CONFIG = {
    "modelUri": "gpt://b1gh89822qbjtjq5mm30/yandexgpt-lite",
    "completionOptions": {
        "stream": False,
        "temperature": 0.6,
        "maxTokens": 2000
    },
    "messages": [
        {
            "role": "system",
            "text": "–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫, –æ—Ç–≤–µ—á–∞–π –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –∑–∞–¥–∞—é—Ç, –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        }
    ]
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
user_conversations = {}

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è—Ö –∏ –∞–Ω–∞–ª–∏–∑–∞—Ö
books_data = {
    "–±–µ–ª—ã–µ –Ω–æ—á–∏": {
        "summary": "–†–æ–º–∞–Ω –§.–ú. –î–æ—Å—Ç–æ–µ–≤—Å–∫–æ–≥–æ, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—â–∏–π –æ –≤—Å—Ç—Ä–µ—á–µ –≥–µ—Ä–æ—è —Å –∂–µ–Ω—â–∏–Ω–æ–π, –∫–æ—Ç–æ—Ä–∞—è –µ–º—É –ø—Ä–∏–≤–∏–¥–µ–ª–∞—Å—å –≤ –µ–≥–æ —Å–Ω–∞—Ö, –∏ –æ —Ç–æ–º, –∫–∞–∫ —ç—Ç–∞ –≤—Å—Ç—Ä–µ—á–∞ –∏–∑–º–µ–Ω—è–µ—Ç –µ–≥–æ –∂–∏–∑–Ω—å.",
        "analysis": {
            "–ø—Ä–∏–∑—Ä–∞–∫": {
                "summary": "–ú–æ—Ç–∏–≤ –ø—Ä–∏–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –≤ –ø–æ–≤–µ—Å—Ç–∏ ¬´–ë–µ–ª—ã–µ –Ω–æ—á–∏¬ª —Å–≤—è–∑–∞–Ω —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è–º–∏ –≥–µ—Ä–æ—è. –í—Å—Ç—Ä–µ—á–∏ –∏ –º–µ—á—Ç—ã –≥–µ—Ä–æ—è —á–∞—Å—Ç–æ –æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —ç—Ñ–µ–º–µ—Ä–Ω—ã–º–∏, –∫–∞–∫ –ø—Ä–∏–∑—Ä–∞–∫–∏, –∏—Å—á–µ–∑–∞—é—â–∏–µ –ø—Ä–∏ —Å–≤–µ—Ç–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏.",
                "details": [
                    "–°–ª–æ–≤–æ '–ø—Ä–∏–∑—Ä–∞–∫' —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç –∏–ª–ª—é–∑–æ—Ä–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏ –≥–µ—Ä–æ—è –∏ –ø—É—Å—Ç–æ—Ç—É –µ–≥–æ –º–µ—á—Ç.",
                    "–ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π, —Å—Ä–∞–≤–Ω–∏–≤–∞—è —Å–≤–æ—é –∂–∏–∑–Ω—å —Å –ø—Ä–∏–∑—Ä–∞–∫–æ–º, –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ –∏ —ç—Ñ–µ–º–µ—Ä–Ω–æ—Å—Ç—å —Å–≤–æ–∏—Ö –Ω–∞–¥–µ–∂–¥.",
                    "–í –º–æ–º–µ–Ω—Ç –≤—Å—Ç—Ä–µ—á–∏ —Å –ù–∞—Å—Ç–µ–Ω—å–∫–æ–π —Å–ª–æ–≤–æ '–ø—Ä–∏–∑—Ä–∞–∫' –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç —Ö—Ä—É–ø–∫–æ—Å—Ç—å –∏ –Ω–µ—Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –µ–≥–æ —Å—á–∞—Å—Ç—å—è."
                ],
                "quotes": [
                    "–ú–æ—è –∂–∏–∑–Ω—å ‚Äî –∫–∞–∫ –ø—Ä–∏–∑—Ä–∞–∫, –Ω–µ—Å—É—â–∏–π—Å—è –Ω–∞–¥ –ø—É—Å—Ç—ã–Ω–Ω–æ–π –∑–µ–º–ª—ë–π.",
                    "–û–Ω–∞ –±—ã–ª–∞ –¥–ª—è –º–µ–Ω—è –∫–∞–∫ –ø—Ä–∏–∑—Ä–∞–∫, –Ω–µ–æ—Å—è–∑–∞–µ–º–∞—è, —Å–ª–æ–≤–Ω–æ —Å–æ–Ω."
                ],
                "answers": {
                    "–∞–Ω–∞–ª–∏–∑ –º–æ—Ç–∏–≤–æ–≤ –ø—Ä–∏–∑—Ä–∞—á–Ω–æ—Å—Ç–∏": "–ú–æ—Ç–∏–≤ –ø—Ä–∏–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –≤ –ø–æ–≤–µ—Å—Ç–∏ –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ –≥–ª–∞–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è, –∫–æ—Ç–æ—Ä—ã–π –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–≤–æ—é –∂–∏–∑–Ω—å –∫–∞–∫ –Ω–µ—á—Ç–æ —ç—Ñ–µ–º–µ—Ä–Ω–æ–µ –∏ –Ω–µ–æ—Å—è–∑–∞–µ–º–æ–µ. –≠—Ç–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ –≤ –µ–≥–æ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è—Ö, —Ç–∞–∫ –∏ –≤ –µ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∫ –ù–∞—Å—Ç–µ–Ω—å–∫–µ, —á—Ç–æ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±–º–∞–Ω—á–∏–≤–æ—Å—Ç—å –º–µ—á—Ç."
                }
            }
        }
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Å –∞–Ω–∞–ª–∏–∑–æ–º
async def handle_message(update: Update, context: CallbackContext) -> None:
    user_text = update.message.text.strip()  # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = update.message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏

    # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Å–ª–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.message.from_user.username} ({user_id}) –Ω–∞–ø–∏—Å–∞–ª: {user_text}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ—Ä–∞–∑—ã —Ç–∏–ø–∞ "–ó–Ω–∞–µ—à—å chat gpt?"
    if "–ó–Ω–∞–µ—à—å chat gpt?" in user_text.lower():
        await update.message.reply_text("–ö–æ–Ω–µ—á–Ω–æ, —è –∑–Ω–∞—é! ChatGPT - —ç—Ç–æ –æ—á–µ–Ω—å —É–º–Ω—ã–π –ò–ò, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —á–µ–º —É–≥–æ–¥–Ω–æ!")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    if user_id not in user_conversations:
        user_conversations[user_id] = []

    user_conversations[user_id].append({"role": "user", "text": user_text})

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ –º–æ—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–∏–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
    if "–ø—Ä–∏–∑—Ä–∞–∫" in user_text.lower() and "–±–µ–ª—ã–µ –Ω–æ—á–∏" in user_text.lower():
        book_info = books_data.get("–±–µ–ª—ã–µ –Ω–æ—á–∏")
        if book_info and "–ø—Ä–∏–∑—Ä–∞–∫" in book_info["analysis"]:
            analysis = book_info["analysis"]["–ø—Ä–∏–∑—Ä–∞–∫"]
            response = f"–ú–æ—Ç–∏–≤ –ø—Ä–∏–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –≤ –ø–æ–≤–µ—Å—Ç–∏ '–ë–µ–ª—ã–µ –Ω–æ—á–∏':\n\n"
            response += f"{analysis['summary']}\n\n"
            response += "–ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:\n"
            for detail in analysis["details"]:
                response += f"- {detail}\n"
            response += "\n–¶–∏—Ç–∞—Ç—ã:\n"
            for quote in analysis["quotes"]:
                response += f"‚Ä¢ {quote}\n"
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            if "–∞–Ω–∞–ª–∏–∑ –º–æ—Ç–∏–≤–æ–≤ –ø—Ä–∏–∑—Ä–∞—á–Ω–æ—Å—Ç–∏" in user_text.lower():
                response += "\n–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑:\n"
                response += analysis["answers"]["–∞–Ω–∞–ª–∏–∑ –º–æ—Ç–∏–≤–æ–≤ –ø—Ä–∏–∑—Ä–∞—á–Ω–æ—Å—Ç–∏"]
        else:
            response = "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–∏–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏."
        await update.message.reply_text(response)
        return

    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è Yandex API
    model_request = MODEL_CONFIG.copy()
    model_request["messages"].extend(user_conversations[user_id])

    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º aiohttp –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        async with aiohttp.ClientSession() as session:
            async with session.post(YANDEX_API_URL, json=model_request, headers=HEADERS) as response:
                response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞

                # –†–∞–∑–±–∏—Ä–∞–µ–º JSON-–æ—Ç–≤–µ—Ç
                result = await response.json()
                logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç Yandex API: {result}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
                reply_text = (
                    result.get("result", {})
                    .get("alternatives", [{}])[0]
                    .get("message", {})
                    .get("text", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞.")
                )

                # –õ–æ–≥–∏—Ä—É–µ–º, —á—Ç–æ –±–æ—Ç —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
                logger.info(f"–û—Ç–≤–µ—Ç –±–æ—Ç–∞: {reply_text}")

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await update.message.reply_text(reply_text)

    except Exception as e:
        response = f"–û—à–∏–±–∫–∞: {str(e)} üòû"
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Yandex API: {str(e)}")
        await update.message.reply_text(response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: CallbackContext) -> None:
    await update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç! –Ø –ê–ª–∏—Å–∞. –ú–æ–≥—É –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –ª—é–±—É—é —Ç–µ–º—É –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã! –ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç BotFather
    TELEGRAM_BOT_TOKEN = "8135223868:AAHlHKjkPIrlm6Fv-4qXhQBGX-pEjGmkzew"  # –í—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω

    if not TELEGRAM_BOT_TOKEN:
        logger.error("–¢–æ–∫–µ–Ω Telegram –Ω–µ —É–∫–∞–∑–∞–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ TELEGRAM_BOT_TOKEN.")
        return

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Application
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏–π...")
    application.run_polling()

if __name__ == "__main__":
    main()
